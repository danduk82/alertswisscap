"""create tables

Revision ID: 56715f4c6ac8
Revises: c8314aa90324
Create Date: 2025-04-29 09:23:12.672956

"""

from collections.abc import Sequence
from typing import Union

import geoalchemy2
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "56715f4c6ac8"
down_revision: Union[str, None] = "c8314aa90324"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "canton_lookup",
        sa.Column("shortener", sa.String(), nullable=False),
        sa.Column("canton_number", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("shortener"),
        sa.UniqueConstraint("canton_number"),
        schema="alertswisscap",
    )
    op.create_table(
        "cap_alerts",
        sa.Column("cap_id", sa.String(), nullable=False),
        sa.Column("reference", sa.String(), nullable=False),
        sa.Column("cap_sender", sa.String(), nullable=True),
        sa.Column("cap_sent", sa.DateTime(), nullable=False),
        sa.Column("cap_status", sa.String(), nullable=False),
        sa.Column("cap_message_type", sa.String(), nullable=False),
        sa.Column("cap_scope", sa.String(), nullable=False),
        sa.Column("cap_code", sa.String(), nullable=True),
        sa.Column("cap_restriction", sa.String(), nullable=True),
        sa.Column("cap_references", sa.String(), nullable=True),
        sa.Column("cap_category", sa.String(), nullable=False),
        sa.Column("cap_event", sa.String(), nullable=False),
        sa.Column("cap_urgency", sa.String(), nullable=False),
        sa.Column("cap_severity", sa.String(), nullable=False),
        sa.Column("cap_certainty", sa.String(), nullable=False),
        sa.Column("cap_onset", sa.DateTime(), nullable=True),
        sa.Column("cap_expires", sa.DateTime(), nullable=True),
        sa.Column("cap_sender_name", sa.String(), nullable=True),
        sa.Column("cap_web", sa.String(), nullable=True),
        sa.Column("cap_contact", sa.String(), nullable=True),
        sa.Column("cap_headline_de", sa.String(), nullable=True),
        sa.Column("cap_headline_fr", sa.String(), nullable=True),
        sa.Column("cap_headline_it", sa.String(), nullable=True),
        sa.Column("cap_headline_en", sa.String(), nullable=True),
        sa.Column("cap_description_de", sa.String(), nullable=True),
        sa.Column("cap_description_fr", sa.String(), nullable=True),
        sa.Column("cap_description_it", sa.String(), nullable=True),
        sa.Column("cap_description_en", sa.String(), nullable=True),
        sa.Column("cap_instruction_de", sa.String(), nullable=True),
        sa.Column("cap_instruction_fr", sa.String(), nullable=True),
        sa.Column("cap_instruction_it", sa.String(), nullable=True),
        sa.Column("cap_instruction_en", sa.String(), nullable=True),
        sa.Column("cap_area_desc", sa.String(), nullable=True),
        sa.Column("cap_area_altitude", sa.Float(), nullable=True),
        sa.Column("cap_area_ceiling", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("cap_id"),
        schema="alertswisscap",
    )
    op.create_table(
        "cap_circles",
        sa.Column("circle_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="POINT", srid=4326, from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column("radius", sa.Float(), nullable=True),
        sa.Column("cap_alert_cap_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cap_alert_cap_id"], ["alertswisscap.cap_alerts.cap_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("circle_id"),
        schema="alertswisscap",
    )
    op.create_table(
        "cap_geocodes",
        sa.Column("geocode_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("valueName", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("cap_alert_cap_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cap_alert_cap_id"], ["alertswisscap.cap_alerts.cap_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("geocode_id"),
        schema="alertswisscap",
    )
    op.create_table(
        "cap_polygons",
        sa.Column("polygon_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="MULTIPOLYGON", srid=4326, from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column("cap_alert_cap_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cap_alert_cap_id"], ["alertswisscap.cap_alerts.cap_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("polygon_id"),
        schema="alertswisscap",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cap_polygons", schema="alertswisscap")
    op.drop_table("cap_geocodes", schema="alertswisscap")
    op.drop_table("cap_circles", schema="alertswisscap")
    op.drop_table("cap_alerts", schema="alertswisscap")
    op.drop_table("canton_lookup", schema="alertswisscap")
    # ### end Alembic commands ###
